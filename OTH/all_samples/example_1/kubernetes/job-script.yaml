apiVersion: batch/v1
kind: Job
metadata:
  # name of the job
  # you should prepend your username so the the ID becomes unique.
  # note that you might share a namespace with many other users.
  name: rohit-choudhary-tf-mnist

spec:
  template:
    spec:
      # List of containers belonging to the job starts here
      containers:
      # container name used for pod creation
      - name: rohit-choudhary-tf-mnist-pod
        # container image from the registry
        image: ccu.uni-konstanz.de:5000/rohit.choudhary/tf_mnist:0.1

        # container resources requested from the node
        resources:
          # requests are minimum resourcerequirements
          requests:
            # this gives us a minimum 2 GiB of main memory to work with.
            memory: "2Gi"

          # limits are maximum resource allocations
          limits:
            # this gives an absolute limit of 3 GiB of main memory.
            # exceeding it will mean the container exits immediately with an error.
            memory: "3Gi"

            # this requests a number of GPUs. GPUs will be allocated to the container
            # exclusively. No fractional GPUs can be requested.
            # When executing nvidia-smi in the container, it should show exactly this
            # number of GPUs.
            #
            # PLEASE DO NOT SET THE NUMBER TO ZERO, EVER, AND ALWAYS INCLUDE THIS LINE.
            # ALWAYS PUT IT IN THE SECTION "limits", NOT "requests".
            #
            # It is a known limitation of nVidias runtime that if zero GPUs are requested,
            # then actually *all* GPUs are exposed in the container.
            # We are looking for a fix to this.
            #
            nvidia.com/gpu: "1"

        # Environment variables set when running the image,
        # which can for example used to configure your application.
        env:
        - name: PYTHONUNBUFFERED
          value: "1"

        # the command which is executed after container creation
        command: ["/application/run.sh"]

      # login credentials to the docker registry.
      # for convenience, a readonly credential is provided as a secret in each namespace.
      imagePullSecrets:
      - name: registry-ro-login

      # containers will never restart
      restartPolicy: Never

  # number of retries after failure.
  # since we typically have to fix something in this case, set to zero by default.
  backoffLimit: 0

